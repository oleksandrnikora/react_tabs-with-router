{"version":3,"sources":["components/NavItem/NavItem.tsx","components/Navbar/Navbar.tsx","components/TabsPage/TabsPage.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["NavItem","memo","to","text","className","isActive","cn","Navbar","tabs","id","title","content","TabsPage","tabId","useParams","selectedTab","useMemo","find","tab","map","HomePage","NotFoundPage","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"uPASaA,EAAqBC,gBAAK,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACrC,cAAC,IAAD,CACEC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,KAEjBH,GAAIA,EALN,SAOGC,OCdQI,EAAaN,gBAAK,WAC7B,OACE,qBACEG,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAACJ,EAAD,CAASE,GAAG,IAAIC,KAAK,SACrB,cAACH,EAAD,CAASE,GAAG,OAAOC,KAAK,mBCR5BK,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAe,WAC1B,IAAQC,EAAUC,cAAVD,MAEFE,EAAcC,mBAAQ,kBAC1BR,EAAKS,MAAK,SAAAC,GAAG,OAAIA,EAAIT,KAAOI,OAC3B,CAACA,IAEJ,OACE,qCACE,oBAAIT,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGI,EAAKW,KAAI,SAAAD,GAAG,OACX,oBAEEd,UAAWE,IACT,CAAE,YAAaY,EAAIT,KAAOI,IAE5B,UAAQ,MALV,SAOE,cAAC,IAAD,CACEX,GAAIgB,EAAIT,GACR,UAAQ,UAFV,SAIGS,EAAIR,SAVFQ,EAAIT,WAiBjB,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,SACGW,EACGA,EAAYJ,QACZ,4BC1CCS,EAAenB,gBAAK,kBAC/B,oBAAIG,UAAU,QAAd,0BCDWiB,EAAmBpB,gBAAK,kBACnC,oBAAIG,UAAU,QAAd,+BCWWkB,EAAU,WACrB,OACE,qCACE,cAACf,EAAD,IACA,qBAAKH,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,IAAIC,QAAS,cAACJ,EAAD,MAEzB,cAAC,IAAD,CAAOG,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIuB,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,OAAOC,QAAS,cAAC,EAAD,IAA5B,SACE,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,QAGhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAACH,EAAD,iBCxBrCK,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7ec87e01.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { FC, memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string;\n  text: string;\n};\n\nexport const NavItem: FC<Props> = memo(({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => cn(\n      'navbar-item',\n      { 'is-active': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n));\n","import { FC, memo } from 'react';\nimport { NavItem } from '../NavItem';\n\nexport const Navbar: FC = memo(() => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavItem to=\"/\" text=\"Home\" />\n          <NavItem to=\"tabs\" text=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n  );\n});\n","import { FC, useMemo } from 'react';\nimport cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: FC = () => {\n  const { tabId } = useParams();\n\n  const selectedTab = useMemo(() => (\n    tabs.find(tab => tab.id === tabId)\n  ), [tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={cn(\n                { 'is-active': tab.id === tabId },\n              )}\n              data-cy=\"Tab\"\n            >\n              <Link\n                to={tab.id}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab\n          ? selectedTab.content\n          : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import { FC, memo } from 'react';\n\nexport const HomePage: FC = memo(() => (\n  <h1 className=\"title\">Home page</h1>\n));\n","import { FC, memo } from 'react';\n\nexport const NotFoundPage: FC = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { FC } from 'react';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { TabsPage } from './components/TabsPage/TabsPage';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const App: FC = () => {\n  return (\n    <>\n      <Navbar />\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"tabs\" element={<TabsPage />}>\n              <Route path=\":tabId\" element={<TabsPage />} />\n            </Route>\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}